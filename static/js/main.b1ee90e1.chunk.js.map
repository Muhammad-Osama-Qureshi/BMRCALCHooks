{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weight","setweight","height","setheight","Bmi","setBMI","result","setresult","className","placeholder","value","onChange","e","target","type","name","id","onClick","calcBmi","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAyEeA,MArEf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACRC,EADQ,KACDC,EADC,OAEUF,mBAAS,IAFnB,mBAERG,EAFQ,KAEDC,EAFC,OAGIJ,mBAAS,IAHb,mBAGRK,EAHQ,KAGJC,EAHI,OAIUN,mBAAS,IAJnB,mBAIRO,EAJQ,KAIDC,EAJC,KA2Cb,OAEE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,2BAEE,uBACA,uBAHF,SAIQ,uBAAOC,YAAY,eAAeC,MAAOV,EAAQW,SAzCjE,SAAiBC,GAEfX,EAAUW,EAAEC,OAAOH,QAuC+DI,KAAK,SAASC,KAAK,SAAUC,GAAG,KAC1G,uBALF,SAMQ,uBAAOP,YAAY,eAAeC,MAAOR,EAAQS,SAvCjE,SAAkBC,GAChBT,EAAUS,EAAEC,OAAOH,QAsCgEI,KAAK,SAASC,KAAK,SAAUC,GAAG,KAC3G,uBAPF,OAQM,uBAAQP,YAAY,MAAMC,MAAON,EAAKU,KAAK,SAASC,KAAK,GAAGC,GAAG,KACnE,uBAEJ,wBAAQR,UAAU,MAAMS,QAvC9B,WACE,IAAMC,GAAWlB,EAAM,SAAIE,EAAS,IAAQ,IAAGiB,QAAQ,GACvDd,EAAOa,GAWNX,EAPGH,EAAM,GACU,WACXA,GAAK,IAAMA,EAAI,GACJ,UAEA,eA4BhB,uBACI,uBACA,wBAAQa,QAzBlB,WACEZ,EAAO,IACPF,EAAU,IACVF,EAAU,IACVM,EAAU,KAqBsBC,UAAU,QAAlC,mBACCF,UCrDIc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b1ee90e1.chunk.js","sourcesContent":["\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\nconst [weight,setweight]=useState(\"\")\nconst [height,setheight]=useState(\"\")\nconst [Bmi,setBMI]=useState(\"\")\nconst [result,setresult]=useState(\"\")\n\n\n\n\n\nfunction handler(e)\n{\n  setweight(e.target.value)\n}\nfunction handler2(e){\n  setheight(e.target.value)\n}\n \n\nfunction HandleBmi (){\n  const calcBmi = (weight / (height / 100) ** 2).toFixed(2);\n  setBMI(calcBmi)\n \n  let resultDisplay = \"\"; //to display BMI result\n\n  if (Bmi < 18)\n      resultDisplay = \"Too thin\"; //Less than 18 means too thin\n  else if (Bmi>=18 && Bmi<25)\n      resultDisplay = \"Perfect\"; //otherwise >= 18 && < 25\n  else \n      resultDisplay = \"Overweight\"; //otherwise > 25\n\n   setresult(resultDisplay)    \n}\n\nfunction reset(){\n  setBMI(\"\")\n  setheight(\"\")\n  setweight(\"\")\n  setresult(\"\")\n}\n\n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"cal\">\n          BMR Calculator\n          <br/>\n          <br/>\n          Weight<input placeholder=\"Weight in Kg\" value={weight} onChange={handler} type=\"number\" name=\"weight\"  id=\"\"/>\n          <br/>\n          Height<input placeholder=\"Height in cm\" value={height} onChange={handler2} type=\"number\" name=\"height\"  id=\"\"/>\n          <br/>\n          BMI <input  placeholder=\"BMI\" value={Bmi} type=\"number\" name=\"\" id=\"\"/>\n          <br/>\n        \n      <button className=\"btn\" onClick={HandleBmi}>Calculate</button>\n          <br/>\n          <button onClick={reset} className=\"reset\">Reset</button>\n          {result}\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}